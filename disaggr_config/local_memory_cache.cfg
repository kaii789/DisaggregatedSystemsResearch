# 1 core SKX
# #include skx
#include nehalem
#include ../disaggr_config/ddr4-2400-disagg

# l3_cache settings from gainestown.cfg file (need values for simulator to run)
#include ../disaggr_config/l3cache

[general]
total_cores = 1
# The 4 inst_ configs are the default settings
inst_mode_end = "fast_forward" # After the anotation SimRoiEnd(), the simulation goes into the fasat forward mode, where neither cycles,instructions are measured nor the cache events (miss,hits, etc)
inst_mode_init = "fast_forward" # This initializes the simulation mode without counting the cycles, instructions but only fetching data in caches (until the annotation SimRoiStart()
inst_mode_output = "true"
inst_mode_roi = "detailed" # Between the SimRoiStart() and SimRoiEnd() annotations, the simulator runs in a detailed mode, i.e., it simulates all the instryctions, cycles and cache events (i.e., simulate everything)
magic = "true" # basically same effect as passing --roi option to run-sniper

[dvfs/simple]
cores_per_socket = 1

[network]
frequency = 4.0

[network/emesh_hop_by_hop]
size=1:1

[perf_model/core]
frequency = 3.6

[perf_model/dram]
# per_controller_bandwidth = 24.0    # In GB/s   # not used in dram_perf_model_disagg
num_controllers =  1              # Total Bandwidth = per_controller_bandwidth * num_controllers?
controller_positions = "0"
type = "disaggregated"
enable_remote_mem = true          # Whether remote memory is enabled (when false, all memory accesses are local accesses)
page_size = 4096                  # In Bytes; default should be 4096. This is different than the HW ddr "dram_page_size" config
localdram_size = 16777216         # in Bytes  # 33554432 = 32 MB;  16777216 = 16 MB;  8388608 = 8 MB;  4194304 = 4 MB (1024 4K pages);
remote_mem_bw_scalefactor = 4
use_dynamic_bandwidth = false
remote_mem_add_lat = 120          # in nanoseconds (ns)
remote_datamov_threshold = 0      # Currently only used by remote_memory_mode 2 and 5
simulate_tlb_overhead = true      # Currently this config is not implemented in dram_perf_model_disagg
simulate_datamov_overhead = true
remote_memory_mode = 1
remote_page_queue_utilization_threshold = 0.99  # Remote pages aren't moved to local when page datamovement queue has percentage utilization above this, to help ensure specified bandwidth is not violated (decimal between 0 and 1)
remote_cacheline_queue_utilization_threshold = 0.99 # Cacheline requests on inflight pages aren't made, when the cacheline datamovement queue has percentage utilization above this, to help ensure specified bandwidth is not violated (decimal between 0 and 1)
remote_partitioning_ratio = 50
simulate_sw_pagereclaim_overhead = false
remote_exclusive_cache = false    # We have a lot of remote memory so can have inclusive cache
remote_init = false               # Whether new pages are initialized in remote memory when localdram has free space
enable_remote_prefetcher = false
remote_disturbance_factor = 0
remote_dontevictdirty = false
remote_enable_selective_moves = false
remote_partitioned_queues = 0          # Currently, 0 is off, 1 is separate independent queue implementation, 4 is separate independent queue implementation in one queue model, 2 is packet-injecting implementation (doesn't work), 3 is combined subqueuemodel implementation
remote_cacheline_queue_fraction = 0.2  # The fraction of remote bandwidth used for the cacheline queue (decimal between 0 and 1)
use_dynamic_cacheline_queue_fraction_adjustment = true
remote_use_cacheline_granularity = false
remote_reserved_buffer_space = 100
remote_limit_redundant_moves = 1000
remote_throttle_redundant_moves = true
r_mode_5_page_queue_utilization_mode_switch_threshold = 0.7  # Only needed/considered if remote_memory_mode == 5; see disagg.cc for meaning
r_mode_5_remote_access_history_window_size = 100000          # Only needed/considered if remote_memory_mode == 5; see disagg.cc for meaning
use_throttled_pages_tracker = true                           # Whether to update m_throttled_pages_tracker. Must be true to use the ideal page throttler or print stats of throttled pages
r_use_ideal_page_throttling = false                          # Whether to use ideal page throttling (alternative currently is FCFS throttling)
r_ideal_pagethrottle_access_history_window_size = 100000     # For ideal page move throttling algorithm

[perf_model/dram/multipage]
page_buffer_capacity = 1

[perf_model/dram/queue_model]
type = windowed_mg1
use_separate_remote_queue_model = true
remote_queue_model_type = windowed_mg1_remote

[perf_model/dram/compression_model]
use_compression = false
compression_scheme = lz4

[perf_model/dram/compression_model/cacheline]
use_cacheline_compression = false # Enable compression of cachelines if compression enabled
compression_scheme = bdi

[perf_model/dram/compression_model/ideal]
compression_latency = -1 # -1 to set to default
decompression_latency = -1 # -1 to set to default
compressed_page_size = 1

[perf_model/dram/compression_model/bdi]
use_additional_options = false
compression_latency = -1 # -1 to set to default
decompression_latency = -1 # -1 to set to default
compression_granularity = -1 # -1 to set to default

[perf_model/dram/compression_model/fpc]
compression_latency = -1 # -1 to set to default
decompression_latency = -1 # -1 to set to default

[perf_model/dram/compression_model/lcp]
compression_scheme = bdi
compression_latency = -1 # -1 to set to default
decompression_latency = -1 # -1 to set to default

[perf_model/dram/compression_model/fve]
compression_latency = -1 # -1 to set to default
decompression_latency = -1 # -1 to set to default
word_size_bits = -1 # -1 to set to default = 32-bits
dict_table_entries = -1 # -1 to set to default = 64 entries (max supported is 255 entries)

[perf_model/dram/compression_model/lz4]
frequency_normalization = 0.9 # For use when compression latency computed by timer
compression_granularity = -1 # -1 to set to default
compression_latency = -1 # -1 to set to default
decompression_latency = -1 # -1 to set to default

[perf_model/dram/compression_model/lz78]
compression_granularity = -1 # -1 to set to default
compression_latency = -1 # -1 to set to default, in cycles for the latency of the dictionaryTable
decompression_latency = -1 # -1 to set to default, in cycles for the latency of the dictionaryTable
word_size = -1 # Word_size (1, 2, 4, or 8) to find fine-grain patterns for compression, If it is -1, it is set to default (1 byte)
dictionary_size = -1 # Default: 1024 entries
entry_size = -1 # Default: 96 bytes = Max size of a dictionary entry 
size_limit = true # Default: true for a fixed dictionary size of 1024 entries

[perf_model/dram/compression_model/lzw]
compression_granularity = -1 # -1 to set to default
compression_latency = -1 # -1 to set to default, in cycles for the latency of the dictionaryTable
decompression_latency = -1 # -1 to set to default, in cycles for the latency of the dictionaryTable
word_size = -1 # Word_size (1, 2, 4, or 8) to find fine-grain patterns for compression, If it is -1, it is set to default (1 byte)
dictionary_size = -1 # Default: 1024 entries
entry_size = -1 # Default: 96 bytes = Max size of a dictionary entry 
size_limit = true # Default: true for a fixed dictionary size of 1024 entries

[perf_model/dram/compression_model/lzbdi]
use_additional_options = false
compression_granularity = 32 # -1 to set to default
compression_latency = -1 # -1 to set to default, in cycles for the latency of the dictionaryTable
decompression_latency = -1 # -1 to set to default, in cycles for the latency of the dictionaryTable

[perf_model/dram/compression_model/zlib]
compression_granularity = -1 # -1 to set to default
compression_latency = -1 # -1 to set to default
decompression_latency = -1 # -1 to set to default

[perf_model/dram/compression_model/adaptive]
low_compression_scheme = lzbdi
high_compression_scheme = zlib
lower_bandwidth_threshold = 0
upper_bandwidth_threshold = 0.8
compression_latency = -1 # -1 to set to default
decompression_latency = -1 # -1 to set to default

[perf_model/dram/prefetcher_model]
type = next_n_pages
prefetch_unencountered_pages = true      # Whether to prefetch pages that haven't been encountered yet in program execution

[perf_model/dram/prefetcher_model/next_n_pages]
pages_to_prefetch = 1

[queue_model/windowed_mg1]
# window_size = 10000000
window_size = 10000                      # Default: 10^4, a few times larger than the barrier quantum of 10^3

# Section below only considered if queue model type windowed_mg1_remote is used
[queue_model/windowed_mg1_remote]
window_size = 10000000                   # Default: 10^7
# window_size = 10000
use_separate_queue_delay_cap = false
queue_delay_cap = 10000000               # When use_separate_queue_delay_cap = true, use this instead of window_size as the max cap (before adding network latency) on computed queue delays
bandwidth_allowable_excess_ratio = 1.2   # Allow effective bandwidth to exceed the specified bandwidth by at most this ratio

[queue_model/windowed_mg1_remote_combined]
window_size = 10000000                   # Default: 10^7
# window_size = 10000
use_separate_queue_delay_cap = false
queue_delay_cap = 10000000               # When use_separate_queue_delay_cap = true, use this instead of window_size as the max cap (before adding network latency) on computed queue delays
bandwidth_allowable_excess_ratio = 1.2   # Allow effective bandwidth to exceed the specified bandwidth by at most this ratio
request_tracking_window_size = 100000    # Window size, in ns, of tracking page/cacheline requests for calculating reuqest ratio imbalance

[queue_model/windowed_mg1_remote_subqueuemodels]
window_size = 10000000                   # Default: 10^7
# window_size = 10000
use_separate_queue_delay_cap = false
queue_delay_cap = 10000000               # When use_separate_queue_delay_cap = true, use this instead of window_size as the max cap (before adding network latency) on computed queue delays
bandwidth_allowable_excess_ratio = 1.2   # Allow effective bandwidth to exceed the specified bandwidth by at most this ratio
subqueue_utilization_overflow_threshold = 0.98
use_utilization_overflow = false

[clock_skew_minimization/barrier]
quantum = 1000

[osemu]
numa_domains = 1

[log]
# enabled_modules = "dram_perf_model_disagg.cc"
# enabled_modules = "dram_perf_model_disagg.cc queue_model_windowed_mg1.cc"
